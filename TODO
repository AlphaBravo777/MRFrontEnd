Todo shortcuts:
    // Put a ":" at the end of a heading to make it a heading
    // To enter a new point under a heading, use shortcut "ctrl + enter"
    // To enter a time that that you think it is going to take, add '@1h' at the end
    // You can press the @ key to make something critical, high, low or today
    // To mark something as finished, you can
    // 'Cmd/Ctrl+Enter' // Triggers `Todo: Toggle Box`
    // 'Alt+D' // Triggers `Todo: Toggle Done`
    // 'Alt+C' // Triggers `Todo: Toggle Cancelled`
    // 'Alt+S' // Triggers `Todo: Toggle Start`
    // 'Cmd/Ctrl+Shift+A' // Triggers  `Todo: Archive`  This will archive finished todos
    // Ctrl+shift+P and type todo and then "open embedded todos" too see what todos you have in your work

Comon bug reports:
    ☐ Sometimes "report-read-api.service.ts:81" will shop that all daily reports EVER have been collected from the server. This may be because data is
        ☐ collected without timestamp being available yet. This obviously takes a lot of time, and will become worst as time goes on. 

Checklist module:
    ☐  When ever adding a check, the subscriptions accumelate, so every time you enter a check the subscriptions become more and more 

Daily report module:
    ✔ Make more settings where if you want to post a new message, then post message button is active, and it posts a new message, @done(19-01-16 12:51)
        ✔ Else if you want to edit then have it show an edit button, and this will update the message @done(19-01-16 12:51)
    ✔ Make report message reload after a post @1h @done(19-01-16 17:28) @high 
    ✔ Allow user to edit message @2h @started(19-01-16 08:34) @done(19-01-16 17:28) @lasted(8h54m55s)
    ☐ Re-shuffle the reply data. At the moment the last replies are shown first.
    ☐ Add time that message was posted to header element
    ☐ Square up the outgoing frontend api interface to match with the backend RESTapi modules 
    ✔ All delete and edit options is available for every user!! @done(19-01-18 08:12) @critical 
    ✔ Add a version number @30min @done(19-01-18 08:12) @low 
    ✔ Edit message does not keep the messageLevel that it had before editing @30m @started(19-01-17 07:31) @done(19-01-17 12:51) @lasted(5h20m13s)
    ✔ When you edit, but decide to go back to menu, then all settings must reset, so reset settings must run every time you enter report @30m @done(19-01-17 15:13)
    ✔ Create an interface that the edit report data has to comply with when sending to Backend @30m @done(19-01-17 14:50)

Dispatch stock take:

    Bug Fixes:
        ☐ When you change the date, then all the truck subscriptions that you had open also get update.
            ☐ Load a few routes (maybe 4), and then when you change the date it will give you 4 subscriptions (after selectiong a route and getting the data, it should unsubscribe)
        ☐ When you change the date, the routes do not get updated based on the new date, they stay with the old date @critical 

    // Everything starts at stocktake at meatrite. (So the stock must be taken)
    // There should always just be one meatrite stock, you can have stock that says different times, but this will be a copy of the stock that is showing as the latest stock.
    Features: 

        ☐ Create a stocktake table, that takes one of each stock, and also the different batches. (Below you create a batch table as well)
            ☐ Fields should include:
                ☐ Product name (one-to-one) fk with products
                ☐ Amount available
                ☐ Stock taken by
                ☐ Should stock be closed for clearing by default
                ☐ At the products table, maybe make a window that gives a value of how much a product count can be out (differ) before throwing a flag
            ☐ Create a batch table, that has all the batches amounts of a certain stock.
                ☐ This way you can have your overhead stocktake, that can be compared directly to your stocktake -
                    ☐ but also you can retrieve what is the batches that a stock consists of.
                ☐ Fields should include:
                ☐ Foreign one-to-many key to batch table
                ☐ Batch number
                ☐ Amount available
                ☐ Day packed
                ☐ Stock taken by
                ☐ Is product available to pick. (Maybe it is not cleared yet, meaning the value will start as false)
        ☐ After product count, make a "reconsiliation" window where you have to square all the differeces
            ☐ This can also just be a route (Reconsile stock) that you can pick (If they work the same)
        
        // Maybe make it so that it will take a batch code for each stock, and if there are two batch codes that are the same or "null" - 
        // then it will add them together, and if they are different, it will make a new item. 
        ☐ Create a "Load truck" module
            ☐ Make a menu where you can pick your order
                ☐ One of the reasons that the select box may load without orders, may be because observables are running together (combineLatest) -
                    ☐ instead of running in sequeance. Or actually because we get a datePackage, but the initial value is undefined, where we have to check -
                    ☐ that if this is the case, then we have to run the time observable again until the data is not undefined anymore. 
            ✔ Make a place where you can pick your truck number (Maybe more than one truck per route)  // this will not have to happen - @done(19-01-19 10:06)
                ✔ since of all the trucks that needs to be picked, you will see a truck one or two, and can just pick the one you want @done(19-01-19 10:06)
                ✔ The truck numbers should be assigned when reading in the orders @done(19-01-19 10:06)
                ✔ You must just pick a route, and it will give you the totals of all the trucks/clients in that route @done(19-01-23 15:58)
                ✔ But then it must also show you an "All", "1" or "2" buttons for the amounts of trucks @done(19-01-23 15:58)
                ✔ So you can see the products for the whole route, or for the individual trucks. @done(19-01-23 15:58)
                ✔ Trucks (or orders) must have a route name (fk), a truck number (number), and a truck name (route + number (string)) @done(19-01-23 15:58)
                // You need route info, as well as truck info, then when going through all truck routes, you put them in routes and put trucks in routes
                ☐ Also make a button, if you press it then it will get all the truck info, and work out for you how to pick them. 
                    ☐ It will have to see that largest truck that can be successfully picked,
                    ☐ Then subtract the items from the stock and go on to the next largest truck. 
                ☐ Must still make a function that will add all the orders (clients) together, to get a total of all the orders for the truck/route
            ✔ When you have picked your route, it will load all the orders that needs to be loaded. @done(19-01-23 16:18)
            ✔ First compare the total truck stock that are needed, with the total stock on hand to see if you can load the whole truck @done(19-01-23 16:18)
                ✔ Create a service that takes the data, and returns data where the products are matched (Needed product vs On stock product) @done(19-01-23 16:19)
                ✔ Create a component that shows you what is needed vs what is loaded with any two stockgroups given @done(19-01-23 16:20)
            ✔ Create a row of buttons with all the shops/clients where you can see what must be loaded, and what are loaded (green/red button) @done(19-01-24 08:58)
                ✔ You can then click on an order (client) to start loading it. @done(19-02-04 10:31)
                ☐ Maybe a full and empty truck picture
                ☐ The clients must also be ordered according to ranking field, as they will be delivered.
            ☐ After clicking on the order to load, it shows you what is needed, and next to it what is available (Maybe re-use the above component)
            ✔ You then have an up down arrow, so that when you press the up arrow at the stock side, it increases the truck stock, and decreases the factory stock. @done(19-02-04 10:30)
            ✔ Arrows should have 1, 5, 10, 50 and "total needed" totals that you can choose from @done(19-02-04 10:30)
            ☐ If there are different batches of a product, then those batches should all appear, but you should only be able to take of the
                ☐ first one, and when it is at zero, then go on to the next one.
            ☐ Make a field where you can show the exact time that an order/product was loaded @high 

        ☐ It should have borders around the stock showing if there is too little or too much.
        ☐ When you click on truck fininshed, it should add the items to the truck, along with its batch codes, and also update the
        ☐ factory stock. It should then put the stock on pre-hpp (but not checked in - maybe gray), when you unload the truck you will
        ☐ check what is on the truck with what the stock says, click a checkbox if it is alright, and it will turn green at pre-hpp.
        ☐ Then a stocktake is made at post-hpp, showing what was left the previous day, and everything at pre-hpp that can be picked from (or
        ☐ brought over from pre to post hpp might be a better way of saying it.)
        ☐ Then when the truck is loaded again, give the same truck laoding screen, but when you pick the route, it gets all the stock that
        ☐ is at hpp, you might have to use a new batch code, as this will be a new truck going from hpp with different products on it.

    Create image upload function:
        ✔ Create a model that contains an ImageField class @done(19-02-01 16:26)
            ✔ image = models.ImageField(upload_to="restaurants/images/", null=True, blank=True) @done(19-02-01 16:26)
        ✔ Create serializer for the model @done(19-02-01 16:26)
        ☐ Limit image size. Maybe 640x400